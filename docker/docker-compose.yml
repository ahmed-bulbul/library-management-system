version: '3.8'

services:
  library-api:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    image: library-management-system:latest   # âœ… exact name, no "library/"
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:postgresql://postgres:5432/library_db
      - DATABASE_USERNAME=library_user
      - DATABASE_PASSWORD=library_pass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=library_db
      - POSTGRES_USER=library_user
      - POSTGRES_PASSWORD=library_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - library-network

volumes:
  postgres_data:

networks:
  library-network:
    driver: bridge
